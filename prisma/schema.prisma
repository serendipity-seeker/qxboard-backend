datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String         @id @unique // User's wallet address
  makerTrades   Trade[]        @relation("Maker")
  takerTrades   Trade[]        @relation("Taker")
  notifications Notification[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([createdAt])
}

model Trade {
  id        Int      @id @default(autoincrement())
  maker     String // Sender's address
  taker     String // Recipient's address
  price     Int // Price of the asset
  amount    Int // Transaction amount
  tick      Int // tick when transaction occurred
  assetID   Int // Asset's unique identifier
  txHash    String // Unique transaction identifier
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Asset     Asset?   @relation(fields: [assetID], references: [id])
  Maker     User?    @relation("Maker", fields: [maker], references: [id])
  Taker     User?    @relation("Taker", fields: [taker], references: [id])

  @@index([maker, tick])
  @@index([taker, tick])
  @@index([createdAt])
}

model Asset {
  id        Int      @id @default(autoincrement()) // Asset's unique identifier
  name      String // Asset's name (e.g. CFB)
  issuer    String // Asset's issuer (e.g. CFBMEMZOIDEXQAUXYYSZIURADQLAPWPMNJXQSNVQZAHYVOPYUKKJBJUCTVJL)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  trades    Trade[]

  @@unique([name, issuer])
}

model Notification {
  id        Int      @id @default(autoincrement())
  userID    String
  title     String?
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userID], references: [id])
}
